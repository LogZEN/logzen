// Generated by CoffeeScript 1.3.3

/*
Copyright 2012 Sven Reissmann <sven@0x80.io>

This file is part of pyLogView. It is licensed under the terms of the
GNU General Public License version 3. See <http://www.gnu.org/licenses/>.
*/


(function() {
  var Eventlist, evlist,
    _this = this;

  Eventlist = (function() {

    function Eventlist() {
      var timerange;
      timerange = [];
    }

    Eventlist.prototype.displayLoadingIcon = function() {
      return $("#loading").show();
    };

    Eventlist.prototype.hideLoadingIcon = function() {
      return $("#loading").hide();
    };

    Eventlist.prototype.getFilters = function() {
      var result,
        _this = this;
      result = {};
      $('.filter').each(function(index, element) {
        if ($(element).val() !== "") {
          return result[$(element).attr('name')] = $(element).val();
        }
      });
      if (JSON.stringify(result) === "{}") {
        return {
          "match_all": {}
        };
      } else {
        return {
          "term": result
        };
      }
    };

    Eventlist.prototype.loadEvents = function() {
      var es_query;
      es_query = {
        "query": evlist.getFilters(),
        "facets": {
          "range1": {
            "range": {
              "field": "timereported",
              "ranges": [
                {
                  "from": 2012,
                  "to": 2012
                }
              ]
            }
          },
          "histo1": {
            "date_histogram": {
              "field": "timereported",
              "interval": "day"
            }
          }
        }
      };
      return $.ajax({
        url: $('#filterform').attr('action'),
        type: 'POST',
        contentType: "application/json",
        data: JSON.stringify(es_query),
        dataType: 'json',
        success: evlist.handleResult,
        beforeSend: evlist.displayLoadingIcon
      });
    };

    Eventlist.prototype.handleResult = function(result) {
      var i, object, rows, _i, _ref;
      evlist.hideLoadingIcon();
      console.log(JSON.stringify(result));
      rows = "";
      if (result.hits.hits.length) {
        for (i = _i = 0, _ref = result.hits.hits.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
          object = result.hits.hits[_i];
          console.log(object);
          rows += '\
          <tr> \
            <td class="column_menu">\
              <ul class="nav hover-nav" style="display:inline-block">\
                <li class="dropdown">\
                  <a class="dropdown-toggle" href="#"><i class="icon-chevron-down"></i></a>\
                  <ul class="dropdown-menu">\
                    <li><a href="/event/' + object['_id'] + '"><i class="icon-info-sign"></i> Display details</a></li>\
                    <li><a href="{{searchengine}}' + encodeURIComponent(object._source['message']) + '"><i class="icon-globe"></i> Search with {{searchengine_name}}</a></li>\
                  </ul>\
                </li>\
              </ul>\
              <i class="icon-eye-open event_tooltip" title="' + object['_id'] + '"></i>\
            </td>\
            <td colspan="2" class="event">' + object._source['timereported'] + '</td>\
            <td colspan="2" class="event">\
              <span class="badge color_' + object._source['severity'] + '" id="' + object._source['id'] + '">\
                <a href="javascript:void(0)" onclick="$(\'#filter_severity\').val($(this).html()); updateAction();">' + object._source['severity'] + '</a>\
              </span>\
            </td>\
            <td colspan="2" class="event">\
              <a href="javascript:void(0)" onclick="$(\'#filter_facility\').val($(this).html()); updateAction();">' + object._source['facility'] + '</a>\
            </td>\
            <td colspan="2" class="event">\
              <a href="javascript:void(0)" onclick="$(\'#filter_host\').val($(this).html()); updateAction();">' + object._source['fromhost'] + '</a>\
            </td>\
            <td colspan="2" class="event">\
              <a href="javascript:void(0)" onclick="$(\'#filter_program\').val($(this).html()); updateAction();"></a>\
            </td>\
            <td colspan="2">\
              <a href="javascript:void(0)" onclick="$(\'#filter_message\').val(\'' + object._source['message'] + '\'); updateAction();">' + addIpTooltipTags(object._source['message']) + '</a>\
            </td>\
          </tr>\
        ';
        }
      } else {
        rows = '<tr><td colspan="13" id="noresults">No events found</td></tr>';
      }
      return $('tbody').empty().append(rows);
    };

    Eventlist.prototype.plotGraph = function(data, tickrange) {
      var options, plot;
      return plot = $.plot($('#chartdiv'), [data], options = {
        xaxis: {
          ticks: tickrange
        },
        bars: {
          show: true,
          lineWidth: 1,
          fill: true,
          fillColor: {
            colors: ["#729fcf", "#3465af"]
          }
        },
        grid: {
          hoverable: true,
          autoHighlight: true
        },
        tooltip: true,
        tooltipOpts: {
          content: "%y",
          defaultTheme: false
        },
        colors: ["#204a87"],
        selection: {
          mode: "x"
        }
      });
    };

    return Eventlist;

  })();

  evlist = new Eventlist;

  evlist.plotGraph([[0, 0], [0, 0]], []);

  evlist.loadEvents();

  console.log(defaults.severity[0]);

  $('#filterform').bind('keyup', function(event) {
    return evlist.loadEvents();
  });

  $(".clear-addon").each(function(index, element) {
    return $(element).bind('click', function(event) {
      $("#filter_" + $(element).attr("id")).val("");
      return evlist.loadEvents();
    });
  });

  $("#chartdiv").bind('plotselected', function(event) {
    return evlist.loadEvents();
  });

}).call(this);
