// Generated by CoffeeScript 1.3.3

/*
Copyright 2012 Sven Reissmann <sven@0x80.io>

This file is part of pyLogView. It is licensed under the terms of the
GNU General Public License version 3. See <http://www.gnu.org/licenses/>.
*/


(function() {
  var EventListModel, EventModel, evlist,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  EventModel = (function() {

    function EventModel(data) {
      this.id = data._id;
      this.time = data._source.time;
      this.facility = data._source.facility;
      this.facility_text = ko.computed(function() {
        return this.Defaults.facility[data._source.facility];
      });
      this.severity = data._source.severity;
      this.severity_text = ko.computed(function() {
        return this.Defaults.severity[data._source.severity];
      });
      this.detail_url = "/event/" + data._id;
      this.host = data._source.host;
      this.program = data._source.program;
      this.message = data._source.message;
      this.message_hl = evlist.markIP(data._source.message);
    }

    return EventModel;

  })();

  EventListModel = (function() {

    function EventListModel() {
      this.load = __bind(this.load, this);

      var _this = this;
      this.events = ko.observableArray([]);
      this.hits = 0;
      this.loading = ko.observable(false);
      this.page = ko.observable(0);
      this.error = ko.observable(null);
      this.query = ko.computed(function() {
        return {
          "query": {
            "filtered": {
              "query": {
                "match_all": {}
              }
            }
          },
          "size": 50,
          "sort": [
            {
              "time": {
                "order": "desc"
              }
            }
          ]
        };
      });
    }

    EventListModel.prototype.load = function() {
      var _this = this;
      return this.loadEvents = ko.computed(function() {
        return $.ajax({
          url: '/_api/query',
          type: 'POST',
          contentType: "application/json",
          data: JSON.stringify(_this.query()),
          dataType: 'json',
          beforeSend: function() {
            return _this.loading(true);
          },
          success: function(result) {
            var event;
            _this.loading(false);
            _this.error(null);
            return _this.events((function() {
              var _i, _len, _ref, _results;
              _ref = result.hits.hits;
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                event = _ref[_i];
                _results.push(new EventModel(event));
              }
              return _results;
            })());
          },
          error: function(jqXHR, status, error) {
            _this.loading(false);
            _this.error(error);
            return _this.events([]);
          }
        });
      });
    };

    EventListModel.prototype.markIP = function(msg) {
      var ipv4_regex;
      ipv4_regex = /((([1-9][0-9]{0,2})|0)\.(([1-9][0-9]{0,2})|0)\.(([1-9][0-9]{0,2})|0)\.(([1-9][0-9]{0,2})|0))/g;
      return msg.replace(ipv4_regex, '<span class="tooltip_ip">$1</span>');
    };

    return EventListModel;

  })();

  evlist = new EventListModel;

  evlist.load();

  setInterval(evlist.load, 5000);

  ko.applyBindings(evlist);

}).call(this);
