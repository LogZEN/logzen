// Generated by CoffeeScript 1.6.3
/*
Copyright 2013 Sven Reissmann <sven@0x80.io>

This file is part of LogZen. It is licensed under the terms of the
GNU General Public License version 3. See <http://www.gnu.org/licenses/>.
*/


(function() {
  define(['jquery', 'knockout', 'pager', 'vars', 'bootstrap'], function($, ko, pager, vars) {
    var DashboardModel;
    DashboardModel = (function() {
      function DashboardModel() {
        var _this = this;
        this.loading = ko.observable(false);
        $.ajax({
          url: '/_config/widget',
          dataType: 'json',
          success: function(result) {
            return _this.loadWidgets(result);
          }
        });
      }

      DashboardModel.prototype.loadWidgets = function(conf) {
        var all, column, html, row, w, _i, _j, _len, _len1, _results;
        all = 0;
        html = "";
        for (_i = 0, _len = conf.length; _i < _len; _i++) {
          column = conf[_i];
          all += column.size;
          html += '<div class="span' + column.size + '" id="col' + column.id + '"></div>';
        }
        if (all === 12) {
          $('#widgetcolumns').append(html);
          _results = [];
          for (_j = 0, _len1 = conf.length; _j < _len1; _j++) {
            column = conf[_j];
            row = 0;
            _results.push((function() {
              var _k, _len2, _ref, _results1;
              _ref = column.widget;
              _results1 = [];
              for (_k = 0, _len2 = _ref.length; _k < _len2; _k++) {
                w = _ref[_k];
                row += 1;
                $('#col' + column.id).append($("<div id='widget_" + w + column.id + row + "'>").load('/pages/widget/' + w + '/view.html'));
                _results1.push(ko.applyBindings(requireVM('widget/' + w)($("#widget_" + w + column.id + row))));
              }
              return _results1;
            })());
          }
          return _results;
        } else {
          return $('#widgetNumberError').modal('show');
        }
      };

      return DashboardModel;

    })();
    return DashboardModel;
  });

}).call(this);
